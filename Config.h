#if !defined(_CONFIG_H_)
#define	_CONFIG_H_

///////////////////////////////////////////////////////////////////////////////
// В файле Config.h находятся глобальные объявления, используемые в программных
// модулях проекта.
///////////////////////////////////////////////////////////////////////////////




///////////////////////////////////////////////////////////////////////////////
// FUSES: EXT=0xFD, HIGH=0xDA, LOW=0xFF // Для работы с внеш. резонатором
//-----------------------------------------------------------------------------
// BODLEVEL: 2V7
// RSTDISBL: -
// DWEN: -
// SPIEN: +
// WDTON: -
// EESAVE: -
// BOOTSZ: 1024W_3C00
// BOOTRST: +
// CKDIV8: -
// CKOUT: -
// SUT_CKSEL: EXTXOSC_8MHZ_XX_16KCK_14CK_65MS
///////////////////////////////////////////////////////////////////////////////




///////////////////////////////////////////////////////////////////////////////
// Частота процессора
///////////////////////////////////////////////////////////////////////////////

#define MAIN_OSC	8000000UL // Arduino PRO MINI 3.3V

// Делитель частоты процессора
#define DIVIDER_OSC	1
//#define DIVIDER_OSC	2
//#define DIVIDER_OSC	4
//#define DIVIDER_OSC	8
//#define DIVIDER_OSC	16
//#define DIVIDER_OSC	32
//#define DIVIDER_OSC	64
//#define DIVIDER_OSC	128

#define F_CPU (MAIN_OSC / DIVIDER_OSC) // Частота процессора
///////////////////////////////////////////////////////////////////////////////




///////////////////////////////////////////////////////////////////////////////
// Все включаемые файлы, указанные в угловых скобках, находятся в папке
// c:\Program Files\Atmel\Atmel Toolchain\AVR8 GCC\Native\3.4.106\avr8-
// gnu-toolchain\avr\include
///////////////////////////////////////////////////////////////////////////////
#include <avr/io.h>
#include <avr/interrupt.h>
#include <avr/power.h>
#include <string.h>
#define __PROG_TYPES_COMPAT__ // Для поддержки старых объявлений типа prog_char
#include <avr/pgmspace.h> // Для размещения данных в программной памяти
#include <stdlib.h>

///////////////////////////////////////////////////////////////////////////////
#define LC_INCLUDE "lc-addrlabels.h" // Использовать расширение GCC
									// "Labels as Values". 
									// После этого можно переключать поток
									// выполнения внутри оператора switch.
#include "pt\pt.h" // Для поддержки функций-протопотоков s
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
#include "pin_macros.h" // Макро: DRIVER(), ON(), OFF(), CPL(), TOGGLE(),
						// CLR(), SET(), ACTIVE(), LATCH()
///////////////////////////////////////////////////////////////////////////////




#define TRUE	1
#define FALSE	0

#define TASK_ACTIVE		TRUE
#define TASK_PASSIVE	FALSE




//#define LCD_ROTATE	// Определяется для случая, когда индикатор повернут
					// на 180 градусов ("вверх ногами")




///////////////////////////////////////////////////////////////////////////////
// Константы для библиотеки MT (Multitasking).
// При вводе новых идентификаторов необходимо корректировать количество
// задач/драйверов/мьютексов/таймаутов  в файле MT_Cfg.h
///////////////////////////////////////////////////////////////////////////////


// ID мьютексов
// Каждому мьютексу должен быть присвоен уникальный номер, начиная от 0 и
// далее по порядку. Для каждого мьютекса в библиотеке MT резервируются данные.
///////////////////////////////////////////////////////////////////////////////
#define MUTEX_LCD			0
///////////////////////////////////////////////////////////////////////////////

// ID таймаутов.
// Каждому таймауту должен быть присвоен уникальный номер, начиная от 0 и
// далее по порядку. Для каждого таймаута в библиотеке MT резервируются данные.
///////////////////////////////////////////////////////////////////////////////
#define TIMEOUT_DEMO		0
#define TIMEOUT_FONT		1
///////////////////////////////////////////////////////////////////////////////

// ID драйверов
// Каждому драйверу должен быть присвоен уникальный номер, начиная от 0 и далее
// по порядку. Для каждого драйвера в библиотеке MT резервируются данные.
///////////////////////////////////////////////////////////////////////////////
#define DRV_I2C			0
///////////////////////////////////////////////////////////////////////////////




// Используемые порты микроконтроллера

#define HL	B,5,H	// Выв.17. Порт B, бит 5,
					// активный уровень H (Светодиод)


#endif
